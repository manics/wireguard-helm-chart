{{- if .Values.wireguard.httpHealthCheck }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "wireguard.fullname" . }}-healthcheck
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "wireguard.labels" . | nindent 4 }}
data:
  healthcheck.py: |
    #!/usr/bin/env python3
    # -*- coding: utf-8 -*-
    # https://www.procustodibus.com/blog/2021/03/wireguard-health-check-for-python-3/

    from http.server import HTTPServer, BaseHTTPRequestHandler
    from subprocess import call


    class HealthCheck(BaseHTTPRequestHandler):
        def do_GET(self):
            if self.check():
                self.send_response(200)
                self.send_header("Content-Type", "text/plain")
                self.end_headers()
                self.wfile.write(b"ok\n")
            else:
                self.send_error(404)

        def do_HEAD(self):
            self.do_GET()

        def check(self):
            return call(["ip", "link", "show", self.server.device, "up"]) == 0


    def main(port, device):
        server = HTTPServer(("", port), HealthCheck)
        server.device = device
        print(f"Health check {device} running on port {port}")
        server.serve_forever()


    if __name__ == "__main__":
        main(58000, "wg0")
{{- end }}
